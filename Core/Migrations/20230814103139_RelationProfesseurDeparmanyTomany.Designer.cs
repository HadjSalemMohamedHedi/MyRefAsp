// <auto-generated />
using System;
using Core.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(myDbContext))]
    [Migration("20230814103139_RelationProfesseurDeparmanyTomany")]
    partial class RelationProfesseurDeparmanyTomany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entities.Cours.DB.Cours_C", b =>
                {
                    b.Property<int>("CoursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoursId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoursId");

                    b.ToTable("Cours_C");
                });

            modelBuilder.Entity("Core.Entities.Departement.DB.Departement_C", b =>
                {
                    b.Property<int>("DepartementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartementId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartementId");

                    b.ToTable("Departement_C");
                });

            modelBuilder.Entity("Core.Entities.Departement.DB.ProfDeparts", b =>
                {
                    b.Property<int>("ID_ProfDepart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ProfDepart"), 1L, 1);

                    b.Property<int>("ID_Departement")
                        .HasColumnType("int");

                    b.Property<int>("ID_Prof")
                        .HasColumnType("int");

                    b.HasKey("ID_ProfDepart");

                    b.HasIndex("ID_Departement");

                    b.HasIndex("ID_Prof");

                    b.ToTable("ProfDeparts");
                });

            modelBuilder.Entity("Core.Entities.Personnes.Etudiant.DB.Etudiant_C", b =>
                {
                    b.Property<int>("PersonneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonneId"), 1L, 1);

                    b.Property<int>("Departement_CId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Niveau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Programme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonneId");

                    b.HasIndex("Departement_CId");

                    b.ToTable("Etudiant_C");
                });

            modelBuilder.Entity("Core.Entities.Personnes.Professeur.DB.Professeur_C", b =>
                {
                    b.Property<int>("PersonneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonneId"), 1L, 1);

                    b.Property<string>("Bureau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonneId");

                    b.ToTable("Professeur_C");
                });

            modelBuilder.Entity("Core.Entities.Departement.DB.ProfDeparts", b =>
                {
                    b.HasOne("Core.Entities.Departement.DB.Departement_C", "Departement")
                        .WithMany("ProfDeparts")
                        .HasForeignKey("ID_Departement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Personnes.Professeur.DB.Professeur_C", "Professeur")
                        .WithMany("ProfDeparts")
                        .HasForeignKey("ID_Prof")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Professeur");
                });

            modelBuilder.Entity("Core.Entities.Personnes.Etudiant.DB.Etudiant_C", b =>
                {
                    b.HasOne("Core.Entities.Departement.DB.Departement_C", "Departement_C")
                        .WithMany("Etudiant_C")
                        .HasForeignKey("Departement_CId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement_C");
                });

            modelBuilder.Entity("Core.Entities.Departement.DB.Departement_C", b =>
                {
                    b.Navigation("Etudiant_C");

                    b.Navigation("ProfDeparts");
                });

            modelBuilder.Entity("Core.Entities.Personnes.Professeur.DB.Professeur_C", b =>
                {
                    b.Navigation("ProfDeparts");
                });
#pragma warning restore 612, 618
        }
    }
}
